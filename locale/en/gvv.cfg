[gvv-mod]
title=global Variable Viewer
tab-filtered-view=Variable trace
help-tab=Helper
xresize=Adjust window width
yresize=Adjust window height
track-interval-control=Tracking refresh interval (tick)
track-refresh=Refresh trace now (Recommended on using game.tick_paused)
remove-checked-button=Remove checked tracking entries
check-for-remove=Check and click __1__ button at top side to remove
show_na=Show n/a
show_func=Show method
obj-list-tooltip=Right-click to remove
right-to-select-all=Right-click to select all
input-code=Input code to run in variable trace
confirm-input-code=Input
right-to-copy-code=Right-click to copy
copy-code=Copy code of a tracking entry
close-main-tooltip=Close (__CONTROL__toggle-main-frame_gvv-mod__)

[gvv-mod-command-help]
only-admin=Only admins or player in singleplay can use this command.
need-graphic=In-game graphical user interface is necessary to use this command.
no-level-support=This map is not supporting remote interface for gvv. Try /gmods to see accessible mod list. You need to insert some code at the end of "control.lua" in this savefile or this scenario.
no-mod-support=Mod "__1__" is not supporting remote interface for gvv. Try /gmods to see accessible mod list. You need to insert some code at the end of "control.lua" in demand mod.
no-mod-found=Mod "__1__" is not found in loaded mod list. Try /gmods to see loaded mod list.
gvv=: Opens/closes gvv main GUI window. Only admins or player in singleplay can use this command.
gmods=: (gvv) Prints loaded mod list and global accessible mod list.
gdump=<mod_name>(optional) : (gvv) Prints global data of accessible mod in lua object notation format.\nIf no <mod_name> is given, level(current map) will be used.
gdump-luaon=<mod_name>(optional) : (gvv) Prints global data of accessible mod in lua object notation format.\nIf no <mod_name> is given, level(current map) will be used.
gdump-json=<mod_name>(optional) : (gvv) Prints global data of accessible mod in js object notation format.\n If no <mod_name> is given, level(current map) will be used.
g-c=/g-command --[[<mod_name>]](optional) <lua_code> : (gvv) Execute Lua code in global scope of other mod. Only for admin.
g-sc=/g-silent-command --[[<mod_name>]](optional) <lua_code> : (gvv) Execute Lua code in global scope of other mod without printing input to console. Only for admin.
g-command=/g-c --[[<mod_name>]](optional) <lua_code> : (gvv) Execute Lua code in global scope of other mod. Only for admin.
g-silent-command=/g-sc --[[<mod_name>]](optional) <lua_code> : (gvv) Execute Lua code in global scope of other mod without printing input to console. Only for admin.

[gvv-mod-help]
control_lua=control.lua
console1=Console commands
console2=remote.call code
how_to_use_gui=How to use GUI
troubleshoot=Troubleshooting
tips=Usage Tips

[gvv-mod-helpui]
diagnose=Diagnose
fix=Clean up
clear-report=Clear

[gvv-mod-help-control_lua]
1=Editing control.lua
2=To allow [color=yellow]gvv[/color] to access [color=yellow]global[/color] table of mod, savefile or scenario(start from beginning), you need to modify "control.lua" file of demand mod or map.
3=Input following code at first line or last line of "control.lua" file of the mod or map. Or you can modify it to be placed anywhere by assigning it to a "local" value without "()" brackets meaning "execute this function now", then it will be stored function and you can run it anytime later you want.
4=In case of savefile, extract "control.lua" from it first. Then, edit code and overwrite it at same location of "control.lua" inside of the zipped file.
5=Refer __1__ to make [color=yellow]gvv[/color] to access current map temporarily without editing "control.lua".
6=Temporarily available state is not able to be saved. In case of multiplay, extra player joined multiplay in such state can be kicked by desync.

[gvv-mod-help-console1]
1=Console commands
2=[color=yellow]gvv[/color] mod provides following commands.
3=__1__ : Opens/closes this window. Player not admin or server console can't use this.
4=__1__ : Prints active mod list and the list of mods accessible by [color=yellow]gvv[/color].
5=__1__ <mod_name>([color=yellow]level[/color] if not given) : Prints [color=yellow]global[/color] table of demand mod as copyable text. You can select format with __2__. Default is __3__.
5-1=__1__ --[[<mod_name>]]([color=yellow]--[[gvv]][/color] if not given) <lua_code> : Execute the Lua code in [color=yellow]global[/color] scope of other mod. If [color=yellow]--[[<mod_name>]][/color] is not given, it is executed in scope of [color=yellow]gvv[/color]. There is also __2__ which is not showing input repeat.
5-2=__1__ : Short versions of __2__ and __3__.
6-0=Temporary allowing to access map([color=yellow]level[/color])
6=To make [color=yellow]gvv[/color] to access current map temporarily without editing "control.lua", input following command at chatting console.
7=Temporarily available state is not able to be saved. In case of multiplay, extra player joined multiplay in such state can be kicked by desync.
8=Inputting following command causes [color=yellow]gvv[/color] not able to access [color=yellow]global[/color] table of the map.
9=If the default state is already accessible from having edited "control.lua", using above command will cause extra player who joins multiplay later can be kicked by desync.
10=If the default state is not accessible from having not edited "control.lua", and if the map became temporarily available to be accessed by using enabling command, using disabling command will allow player to join multiplay freely again.

[gvv-mod-help-console2]
1=remote.call code
2=Here you can copy a code calling [color=yellow]global[/color] table of other mod for easy use.


[gvv-mod-help-how_to_use_gui]
1=How to use GUI
2=In main GUI of [color=yellow]gvv[/color], there are 5 tabs.
3=__1__ : Constantly monitors value of [color=yellow]global[/color] variable marked as interested.
4=__1__ : Shows [color=yellow]global[/color] table of mods accessible by [color=yellow]gvv[/color] as directory tree structure.
5=__1__ : For tracking [color=blue]LuaObject[/color] starting with "[color=blue]Lua...[/color]" found in [color=yellow]global[/color] table, it is registered here first and its contents can be accessed.
6=__1__ : Access global [color=blue]LuaObject[/color] of Factorio.
7=__1__ : This tab.
8=You can find following entries in directory tree structures.
9= : A folder. Left click to open, right-click to register at __1__.
10= : A variable key. Right-click to register at __1__.
11= : A [color=blue]LuaObject[/color] object. Right-click to register at __1__.
12= : A not available(n/a) property in this [color=blue]LuaObject[/color].
13= : A method function in this [color=blue]LuaObject[/color]. [color=yellow]gvv[/color] does not support running methods from tree view.
14=But you can run methods via registering code directly by clicking empty space of __1__. If there is a return value of code, then it will be displayed. Be aware of that the execution result is applied.
15=Right-clicking path of an entry in __1__ will display a window allowing you copy path or code.


[gvv-mod-help-troubleshoot]
1=Troubleshooting
2=Is error message exposed? Most of error occur when the object being tracked actually disappeared or a table among the tracking path is removed.
3=Is this very common thing, and most of case it is resolved by trying to refresh again or seeing and handling what has changed.
4=But can't you access a whole [color=yellow]global[/color] table? This is very special case. If you got error messages similar to following, try following way.
5=Input the name of mod in trouble, and clicking __1__ or __2__ will store the result under [color=yellow]__3__[/color] path of [color=yellow]gvv[/color].
6=Pressing __1__ will actually remove the entries in [color=yellow]global[/color] causing trouble.
7=Entries potentially problematic but not causing trouble now will not be removed by __1__. Only entries in [color=yellow]__2__[/color] are represented as deleted.
8=Clear [color=yellow]__1__[/color] :

[gvv-mod-help-tips]
1=Usage Tips
2=Using parts of [color=yellow]global[/color] table as space for memo
3= When running code using [font=default-bold]/c[/font] or [font=default-bold]/silent-command[/font], do you know whose [color=yellow]global[/color] is the [color=yellow]global[/color] you typing? That's the [color=yellow]global[/color] of the map([color=yellow]level[/color]). Instead, [color=yellow]gvv[/color] provides new commands, [font=default-bold]/g-c[/font] and [font=default-bold]/g-sc[/font] which can read/write [color=yellow]global[/color] table of itself. You can put anything in [color=yellow]global[/color] and track it.
3-0= Because __1__ works in [color=yellow]global[/color] scope of [color=yellow]gvv[/color], full table copy is performed everytime when [color=yellow]remote[/color] calls [color=yellow]global[/color] of other mod. If you want to track [font=default-bold]property[/font] of some object very frequently, putting it in [color=yellow]global[/color] table of [color=yellow]gvv[/color] first before tracking is better for performance.
3-1=- Initialization code
3-2=- Example of memo - game.player.selected
3-3=- Example of memo - Nothing written yet, you can write your own.
3-4=- To delete specific memo, after pasting, type number and press __1__.
3-4-tooltip=I wrote code in this way to by-pass the function notation rule that bracket have to be closed after argument.
3-5= Using [color=yellow]global[/color] table in such way is a trick, and chat commands introduced above are not standard behavior of [color=yellow]gvv[/color] mod. I just introduced an another applicable way as an example.
4=There are few more things can be right-clicked.
5=- Right-clicking __2__ or [font=var]return[/font] values in __1__ tab generates a window to allow copy contents.
5-word1=gray codes
6=- List entry at left side of __1__ tab can be removed by right-clicking.
7=- All texts in a textfield for copying contents can be selected by right-clicking. You can copy them using __1__.
8=Monitoring arbitrary return value - 1
9=- Have you ever tried right-clicking on empty space under the __1__ tab? You can input any code have return value. But if working function is inside of the code, it may affect to game progress.
10=Monitoring arbitrary return value - 2
11=- You can find options at __1__, that allows to change default list of __2__ instead of examples.
12=Longer tracking refresh interval
13= You can input value more than 180 by clicking the number of tracking refresh interval.
14=Examples of using /g-c
15=Every objects including [color=yellow]global[/color] called by [font=default-bold]/g-c[/font] command belong to sandbox of designated mod.
16=__1__ or error if there is a problem.
17=You can use internal function of [font=default-bold]/g-c[/font] at Lua snippet of [font=default-bold]/editor[/font]. Let's input this there and drag to run.



[controls]
toggle-main-frame_gvv-mod=Open/close gvv window

[mod-setting-name]
gvv-mod_preinput_code=Pre-input default tracking codes
gvv-mod_on_start=Apply default tracking codes

[mod-setting-description]
gvv-mod_preinput_code=These codes are applied instead of example codes.\nSeparate with [color=yellow]--[[]]--[/color], 8 characters.\nBe aware of that the execution result is applied if functions are used.
gvv-mod_on_start=Apply default tracking codes when starting map from beginning.\nExample codes will appear if this is not checked.


_=～
